README for Oinkmaster v0.3
~~~~~~~~~~~~~~~~~~~~~~~~~~


By?
~~~
Andreas Östling, andreaso@it.su.se.
Feedback is of course appreciated.



Where?
~~~~~~
http://nitzer.dhs.org/oinkmaster/



What?
~~~~~
A simple Perl script (totally free of course, do whatever you want with it)
to help you update your Snort 1.8+ rules and filter out the unwanted ones.
It will tell you exactly what had changed since the last update, 
hence giving you much better control of your rules.

It's a variant of my arachNIDS snort rules updater
(http://nitzer.dhs.org/arachnids_upd/) which is pretty much the same
thing but for the arachNIDS Snort rules exports at www.whitehats.com.

As of Oinkmaster 0.2 the default URL is
http://www.snort.org/downloads/snortrules.tar.gz

PLEASE be aware of the following description of the rules in the above archive:
"This is a CVS snapshot of the snort signatures every 30 minutes. 
NOTE: These signatures may only work with snort-current"

In other words, use with care and at your own risk.   
Check out http://www.snort.org/ for more information about Snort and its 
rules. Please note that the authors of Snort have nothing to do with Oinkmaster
so don't bother them about silly Oinkmaster problems (and please don't hammer
their site by constant updating).



Requirements
~~~~~~~~~~~~
It should work on most UNIX variants that have Perl, tar, gzip and wget
(ftp://ftp.gnu.org/gnu/wget/) installed.
I've tested it on OpenBSD, FreeBSD, Linux and Solaris.

I'm NOT responsible for what it does to your Snort machine.
Again, use it at your own risk!



How to install?
~~~~~~~~~~~~~~~
Check the INSTALL file.



How does it work?
~~~~~~~~~~~~~~~~~ 
It fetches the new Snort rules archive from
http://www.snort.org/downloads/snortrules.tar.gz (i.e. the latest CVS snapshot),
#comments out the unwanted rules and prints what have been  
added/removed/modified since the last update. Unwanted rules are specified 
in the file oinkmaster.conf. In this file you can also tell Oinkmaster to 
skip entire files that you don't care about (i.e. don't want to update or watch
for changes). If you don't want to #comment out any rules, the file
oinkmaster.confmust still exist but be empty. By default, files in the archived
that are updated and checked for changes are *.rules, *.conf, *.config, *.txt
and *.map with a couple exceptions as you will learn.

This script should probably be run manually but can also be run as a cron job.
But of course, be very careful when doing the latter.
Grabbing the rules as a cron job might sometimes be a good idea (for example
when using the -c flag ("careful" mode, se below), but also restarting 
Snort automatically directly after that is a BAD idea! (no, actually it's 
a TERRIBLE idea). You should never ever do this if you only run one Snort 
box, and don't do it on all boxes if you have several. Automatic updating 
of Snort rules with automatic Snort restart this way is very dangerous and 
can easily disable/fool your NIDS. It usually doesn't take much for these 
automatic updating scripts to fail, so things could easily get messed up 
from one day to another (because of URL changes, different layout in the 
rules archive, typo in a rule set, bug(s) in the script, etc etc).

And as always when updating the Snort rules there may be some changes that you
really don't like (or at least really want to know about), so you should always
manually verify the new rules before using them. Since Oinkmaster will print all
changes in the new rules files to the screen (in an easy-to-read format), this
becomes a fairly simple task.

Of course on a home network and similar not-so-important places,
automatic updating of the rules followed by an automatic Snort restart
might be neat.



Usage information
~~~~~~~~~~~~~~~~~
First try ./oinkmaster.pl -h for more usage information and available options. 

As a first test, you can create an empty rules directory, for example
"/tmp/rules". Also create an empty "oinkmaster.conf" file (or use the default),
for example "/tmp/oinkmaster.conf". Then try:
oinkmaster.pl -o /tmp/rules -i /tmp/oinkmaster.conf
Since your "rules/" directory is empty, all rules files in the new archive
will be regarded as added, and copied to that directory.
Then try "oinkmaster.pl -o /tmp/rules -i /tmp/oinkmaster.conf" one more time.
This time the files in the rules archive will be compared to the ones in
your rules/ directory, and Oinkmaster will tell you if something has been
updated.

By default, all rules will be uncommented (yes, even those ones that are
commented by default in the rules archive distribution, but please note that
these are disabled on purpose and for a reason so you probably want to
consider disabling them again).
Instead we let the file oinkmaster.conf decide which rules that should be
disabled. 

You disable rules by adding "sid x" to the file oinkmaster.conf, where x is
the Snort rule ID (the "sid") of the rule in question. 
So if you want to the rule with sid 123 to be disabled after every update,
you just append the line "sid 123" to oinkmaster.conf.
When you update the rules the next time, this rule will be #commented
and Oinkmaster will notify you about that.

You can also add entire files to be totally ignored by adding "file filename"
to oinkmaster.conf where "filename" is a file in the archive you don't care
about at all. These files will not be checked for changes and they will not be
added/updated on your system. For example if you don't include the file 
icmp-info.rules from your snort.conf and don't care about keeping it up to date,
you can to add the line "file icmp-info.rules" to oinkmaster.conf.
Although it may be a good idea to track rules changes even for rules files you
don't use. Who knows, you might find something interesting some day.

Currently, the files *.rules, *.conf, *.config, *.txt and *.map in the rules
archive are the ones being checked for updates, and then copied to your system
(into the directory specified with the -o flag).



Usage examples
~~~~~~~~~~~~~~
To automagically update the rules every night 02:30 and make backup
of the old ones in /snort/backup/ if there were any updates, and sending
difference between the files to syslog, you could use something like this
in your crontab (consider adding the -c flag though):

30 2 * * * /snort/oinkmaster.pl -o /snort/rules/snort.org-rules/ -i /snort/oinkmaster.conf -b /snort/backup 2>&1 | logger -t oinkmaster

When you check your syslog the next time and see that a new rule has
been added that you don't want, just add its SID to oinkmaster.conf and it
will always be #commented out in future updates. 
(Or if a rule you have disabled has changed and you now decide that you want
to use it again, just remove its SID from oinkmaster.conf and it will be
activated again in the next update). If you want the output to be sent to
you in a mail instead, you could use something like:
oinkmaster.pl ... | mail -s subject you@somewhere

If you just want to check for changes in the new rules archive but not update
your existing rules, you can use the -c flag for "careful" mode.
Its nice to combine -c with -q  and run as a cron job to silently check for
updates (perhaps you just want to use this script to check for updates,
but still want to do the actual rules updating manually).
If you run Oinkmaster with the -c flag and decide that you want to want to
update your rules files, you will have to run Oinkmaster again but without
the -c flag.



Oinkmaster output
~~~~~~~~~~~~~~~~~
If there were any changes in any rule set or other interesting file,
Oinkmaster will print them to the screen.
Here are what the different changes in the rules files mean:

o Added:
  - Totally new rule (the SID did not exist in the old rules file).

o Enabled:
  - The rule (with this SID) was commented in the old rules file, but is
    now activated (probably because the SID was removed from oinkmaster.conf).

o Eenabled and modified:
  -  The rule (with this SID) was commented in the old rules file, but
     is now activated. The actual rule had also been modified.

o Removed:
  - The rule (with this SID) does no longer exist in any way.

o Disabled:
  - The rule (with this SID) still exists but has now been commented
    (probably because the SID was added to oinkmaster.conf).

o Disabled and modified:
  - The rule (with this SID) still exists but has now been commented.
    The actual rule had also been modified.

o Modified active:
  - The rule (with this SID) has been modified and is an active rule.

o Modified inactive:
  - The rule (with this SID) has been modified but is currently an
    inactive (commented) rule.


Here comes an example output.
We see that a rule has been removed from web-cgi.rules and that a rule 
in dos.rules has been updated.



[***] Results from Oinkmaster started Tue Dec 25 23:36:07 2001 [***]

[*] Rules added/removed/modified: [*]

  [---]         Removed (deleted):        [---]
 -> File: web-cgi.rules:
    alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS 80 (msg:"WEB-CGI infosearch fname"; flags: A+; uricontent:
"fname=|7c|";reference:arachnids,290;classtype:attempted-recon; sid:822; rev:1;)

  [///]          Modified active:         [///] 
 -> File: dos.rules:
    Old: alert tcp $EXTERNAL_NET any -> $HOME_NET 7070 (msg:"DOS Real Server template.html"; flags: A+;
content:"/viewsource/template.html?"; nocase;reference:bugtraq,1288; classtype:attempted-dos; sid:277; rev:1;)
    New: alert tcp $EXTERNAL_NET any -> $HOME_NET 7070 (msg:"DOS Real Server template.html"; flags: A+;
content:"/viewsource/template.html?"; nocase; reference:cve,CVE-2000-0474; reference:bugtraq,1288;
classtype:attempted-dos; sid:277; rev:2;)

[*] Non-rule lines added/removed/modified: [*]
    None.

[*] Added files: [*]
    None.



If there were any added files (i.e. files that have not been included in the rules archive
before), you should probably consider including them from your Snort configuration file.
If there were any removed files, you should probably consider excluding them from your Snort
configuration file.



Misc. important notes
~~~~~~~~~~~~~~~~~~~~~
o It's a good idea to have a separate directory for your snort.org rules
  on your snort machine. Why? Because if you have a local rules file called
  "coolstuff.rules" in the output directory (-o <dir>), and a file
  called "coolstuff.rules" is one day added to the snortrules.tar.gz
  distribution, your local file will be overwritten by that one. It could
  also be a problem with the "local.rules" file if you use that one for
  your local rules. In that case you probably don't want it to get
  overwritten by the empty local.rules from the archive every update.
  That's why its ignored by default in oinkmaster.conf. Same thing goes for
  "snort.conf".



o Oinkmaster will never modify your Snort configuration file.
  This means that if there are added files in the rules archive, they will be
  added to your rules directory by Oinkmaster but they still won't be included
  by Snort. Oinkmaster will print a reminder when this happens.

  Oinkmaster also never deletes any rules files from your system.
  So if a file called foo.rules is usually included in snortrules.tar.gz but is
  one day removed from it, the old foo.rules will still be left in your rules
  directory. Oinkmaster will notify you of this but only if you use the "-r"
  argument. "-r" means that every interesting file (*.rules, *.conf ...)
  in your output directory will be checked to see if it also exists in the 
  downloaded rules archive. If it doesn't, it will be regarded as removed
  from the archive and a message will be printed because you may want
  to edit your Snort configuration file to exclude this file.

  So if you use a separate directory for your Snort rules from snort.org 
  (i.e. you have possible local rules files in another directory, you 
  probably want to use the "-r" argument. Otherwise it will be very 
  missleading since your local rules files obviously don't exist in the 
  rules archive, and will be regarded as removed every time. Another reason 
  to use a separate directory for the snort.org rules is that they will be 
  overwritten after each update which means that all possible local 
  modifications will be lost. Therefore it's better to move rules you need 
  to modify to some local rules file instead. That's my opinion anyway.
  Of course if you need to change something like the variables ($home_net/$external
  etc) after every update it's probably better to just run the rules files thru sed
  or another script after each Oinkmaster update.



o Don't depend too much on this script for the rules updating process.
  It's just indented to be a small help and you should always keep an eye 
  on it. If running Oinkmaster from another script it may be useful to know
  that it exits with a return value of zero if everything seemed to go ok, and a 
  non-zero value if there was an error. But remember that there are no guarantees.
