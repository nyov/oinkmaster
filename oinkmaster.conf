# $Id$ #


################################################
#    General options you may want to change    #
################################################

# URL to the rules archive to download (or copy).
# Must begin with http://, ftp:// or file:// and end with .tar.gz

# Use this one if you're running the latest release version of Snort
# (or following snort-STABLE):
url = http://www.snort.org/dl/rules/snortrules-stable.tar.gz

# Use this one *only* if you're following snort-CURRENT.
# This ruleset usually only works with recent develop versions of Snort!
# url = http://www.snort.org/dl/rules/snortrules-current.tar.gz

# Or if you prefer to download the rules archive from outside Oinkmaster,
# you can then point to the file on your local filesystem by using
# file://<filename>, for example:
# url = file:///tmp/snortrules.tar.gz

# The PATH to use during execution.
# 'tar' and 'gzip' must be found, and also 'wget' if fetching from a 
# remote host. If you're running under Win32/Cygwin, you may want
# something like "path = /cygdrive/c/oinkmaster"
path = /bin:/usr/bin:/usr/local/bin

# Temporary directory to use. This directory must exist (Oinkmaster will 
# then create a temporary sub directory in here). Keep it as a #comment if 
# you want to use the default (/tmp/). If you're running under Win32/Cygwin, 
# you may want something like "tmpdir = /cygdrive/c/tmp"
# Example for *nix:
# tmpdir = /home/oinkmaster/tmp/

# The umask to use during execution if want it to be something else
# than the current value when starting Oinkmaster
# (keep it commented out to use the current value).
# For example:
# umask = 0027

# Files in the archive matching this regexp will be checked
# for changes, and then updated or added if needed.
# (You can then choose to skip individual files by specifying
# the "skipfile" keyword below".)
# Normally you shouldn't need to change this one. 
update_files = \.rules$|\.config$|\.conf$|\.txt$|\.map$

# By default, both rules and non-rule lines are compared
# in each file. If you just want to check for actual rule 
# changes, set check_non-rules to 0 by uncommenting the line 
# below. Note that your rules files will not even get updated 
# if there were only non-rule changes in them.
# check_non-rules = 0



#######################################################################
# Files to totally skip (i.e. never update them or check for changes) #
#                                                                     #
# Syntax: skipfile filename                                           #
# or:     skipfile filename1, filename2, filename3, ...               #
#######################################################################

# Ignore (skip) "local.rules" from the rules archive by default, since we might
# have put some local rules in our own "local.rules", and we don't want
# it to get overwritten by the empty one from the archive after each update.
skipfile local.rules

# Also skip snort.conf from the rules archive by default since we don't
# want to overwrite our own snort.conf if we have it in the same directory as
# the rules. (If you have your own ("real") snort.conf in another directory, it
# may be really nice to check for changes in this file though, especially since
# new variables are sometimes added!)
skipfile snort.conf

# The file deleted.rules contains rules that have been deleted from other files.
# There is usually no point in watching it.
skipfile deleted.rules



##########################################################################
# SIDs to modify after each update (only for the skilled/stupid/brave!)  #
# Don't use it unless you have to.                                       #
# If you just want to disable SIDs, please skip this section and have a  #
# look at the "disablesid" keyword below. It's much simpler.             #
#                                                                        #
# Oinkmaster will clean out whitespaces next to the leading "#" (if any) #
# in all rules, so always use "#alert" to match a rule that is commented #
# out, even if it really begins with "# alert" and not "#alert".         #
# You may specify several modifysid directives for the same SID.         #
# The strings are the exact strings you want to match/replace, they are  #
# not regular expressions.                                               #
#                                                                        #
# Note that #comments are NOT allowed on "modifysid" lines.              #
#                                                                        #
# Syntax: modifysid SID "replacethis" | "withthis"                       #
##########################################################################

# Example to enable a rule (in this case SID 1325) that is disabled by
# default, by simply replacing "#alert" with "alert":
# modifysid 1325 "#alert" | "alert"

# Example to add "tag" stuff to SID 1325:
# modifysid 1325 "sid:1325;" | "sid:1325; tag: host, src, 300, seconds;"

# Example to replace $EXTERNAL_NET with $HOME_NET in SID 302:
# modifysid 302 "$EXTERNAL_NET" | "$HOME_NET"



#############################################
# SIDs to comment out after each update     #
#                                           #
# Syntax:  disablesid SID                   #
# or:      disablesid SID1, SID2, SID3, ... #
#############################################

# SID 1-6 are disabled by default, just as an example.

# You can specify one SID per line:
disablesid 1
disablesid 2
disablesid 3

# And also as comma-separated lists:
disablesid 4, 5, 6
